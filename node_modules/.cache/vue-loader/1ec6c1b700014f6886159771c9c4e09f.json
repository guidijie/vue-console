{"remainingRequest":"E:\\vscode-workspace\\vue\\myconsole\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vscode-workspace\\vue\\myconsole\\src\\components\\Login.vue?vue&type=style&index=0&id=ef68022e&scoped=true&lang=css&","dependencies":[{"path":"E:\\vscode-workspace\\vue\\myconsole\\src\\components\\Login.vue","mtime":1610347932845},{"path":"E:\\vscode-workspace\\vue\\myconsole\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vscode-workspace\\vue\\myconsole\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\vscode-workspace\\vue\\myconsole\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\vscode-workspace\\vue\\myconsole\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vscode-workspace\\vue\\myconsole\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoubCB7DQogIHdpZHRoOiA1MDBweDsNCiAgbWFyZ2luOiBhdXRvOw0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIHRvcDogNTAlOw0KICBtYXJnaW4tdG9wOiAtMjMwcHg7DQp9DQoNCi5lbC1jYXJkIHsNCiAgd2lkdGg6IDUwMHB4Ow0KICBib3JkZXItcmFkaXVzOiAyMHB4Ow0KfQ0KDQouZGVtby1ydWxlRm9ybSB7DQogIG1hcmdpbi10b3A6IDMwcHg7DQogIHdpZHRoOiA0MjBweDsNCn0NCg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"l\">\r\n    <el-card class=\"box-card\">\r\n      <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n        <el-form-item label=\"用户名\" prop=\"uname\">\r\n          <el-input type=\"text\" v-model=\"ruleForm.uname\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"pass\">\r\n          <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n          <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\r\n          <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n// import axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    let validateUName = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入用户名!'));\r\n      } else {\r\n        let str = /[a-zA-Z0-9]{3,16}$/\r\n        if (!str.test(value)) {\r\n          callback(new Error('请输入3~16范围的字母!'));\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    let validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码!'));\r\n      } else {\r\n        let str = /[a-zA-Z0-9]{4,16}$/\r\n        if (!str.test(value)) {\r\n          callback(new Error('请输入4~16范围的数字和字母!'));\r\n        } else {\r\n          if (this.ruleForm.checkPass !== '') {\r\n            this.$refs.ruleForm.validateField('checkPass');\r\n          }\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    let validatePass2 = (rule, value, callback) => {\r\n      let str = /[a-zA-Z0-9]{4,16}$/\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'));\r\n      } else if (!str.test(value)) {\r\n        callback(new Error('请输入4~16范围的数字和字母!'));\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error('两次输入密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      ruleForm: {\r\n        uname: '',\r\n        pass: '',\r\n        checkPass: '',\r\n        role: ''\r\n      },\r\n      rules: {\r\n        uname: [\r\n          {validator: validateUName, trigger: 'blur'}\r\n        ],\r\n        pass: [\r\n          {validator: validatePass, trigger: 'blur'}\r\n        ],\r\n        checkPass: [\r\n          {validator: validatePass2, trigger: 'blur'}\r\n        ],\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n\r\n          let user ={\r\n            username : this.ruleForm.uname,\r\n            password : this.ruleForm.pass\r\n          }\r\n\r\n          this.$http.post(\"http://localhost:8080/login\",user).then(data =>{\r\n            let user = data.data.data;\r\n            //判断是否查询到数据\r\n            if(user !== null){\r\n\r\n              //判断是否是admin角色\r\n              if(user.role === 'admin'){\r\n                //存入session\r\n                localStorage.setItem(\"user\", JSON.stringify(user));\r\n                this.$router.push(\"/\");\r\n              }else{\r\n                this.$message.error('你不是管理员用户没有权限登录');\r\n              }\r\n            }else{\r\n              this.$message.error('账号或密码错误');\r\n            }\r\n          }).catch(() =>{\r\n            this.$message.error('哎呀~服务器遇见问题了无法登陆！');\r\n          })\r\n\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.l {\r\n  width: 500px;\r\n  margin: auto;\r\n  position: relative;\r\n  top: 50%;\r\n  margin-top: -230px;\r\n}\r\n\r\n.el-card {\r\n  width: 500px;\r\n  border-radius: 20px;\r\n}\r\n\r\n.demo-ruleForm {\r\n  margin-top: 30px;\r\n  width: 420px;\r\n}\r\n</style>\r\n"]}]}